version: "3.8"

services:

  backend:
    build:
      context: ./
      dockerfile: Dockerfile
    image: where-is-everyone-bot
    restart: always
    container_name: where-is-everyone-bot
    # ports:
    #   - "${API_PORT}:8050"
    ports:
      - target: 8050
        published: ${API_PORT}
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - env.list
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - mynetwork
 
  db:
    container_name: postgres_container
    image: postgres
    restart: always
    env_file:
      - env.list
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # ports:
      # - "${POSTGRES_PORT}:5432"
    ports:
      - target: 5432
        published: ${POSTGRES_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./db/data:/var/lib/postgresql/data
    user: 1000:1000
    networks:
      mynetwork:
        aliases:
          - database

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    networks:
      - mynetwork
    env_file:
      - env.list
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    # ports:
      # - "${PGADMIN_PORT}:80"
    ports:
      - target: 80
        published: ${PGADMIN_PORT}

  migrate:
    image: migrate/migrate
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mynetwork
    volumes:
      - ./db/migrations:/migrations
    user: 1000:1000
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
    command: [
      "-path",
      "/migrations",
      "-database",

      "postgres://\
      $POSTGRES_USER:\
      $POSTGRES_PASSWORD@\
      $POSTGRES_HOST:\
      $POSTGRES_PORT/\
      $POSTGRES_DB?\
      sslmode=disable",

      "up"]
    links: 
       - db

networks:
  mynetwork: